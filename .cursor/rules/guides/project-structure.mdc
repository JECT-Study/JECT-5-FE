---
description: 
globs: 
alwaysApply: true
---
# 프로젝트 구조 가이드

> 🏗️ **JECT-5-FE 모노레포 구조 및 디렉토리 구성**

## 🔧 기본 구성
- **Yarn Berry + PnP Mode 기반 모노레포**


## 📁 프로젝트 구조
```
JECT-5-FE/ /* Yarn Berry + PnP Mode 기반 모노레포 구조 */
├── service/ /* 실제 서비스 애플리케이션들이 위치하는 디렉토리 */
│   └── app/ /* @ject-5-fe/app - Next.js 14 기반 메인 웹 애플리케이션, app route 방식 사용, vitest browser mode(playwright) 활용 */
│       ├── src/
│       │   └── app/ /* Next.js App Router 방식 */
│       │       ├── layout.tsx /* Root layout component */
│       │       ├── page.tsx /* Root page component */
│       │       └── globals.css /* Global styles */
│       ├── package.json
│       ├── tailwind.config.ts
│       └── tsconfig.json
├── shared/ /* 패키지 내에서 공유될 공통 패키지들이 위치하는 디렉토리 */
│   ├── design/ /* @ject-5-fe/design - 디자인 시스템 패키지, tailwind v3 + react + storybook 기반 */
│   │   ├── src/
│   │   │   ├── components/ /* 공통 UI 컴포넌트, 디자인 토큰 */
│   │   │   │   └── button.tsx /* 공통 컴포넌트 작성 위치 */
│   │   │   └── stories/ /* 컴포넌트에 대한 테스트 story 파일 작성 위치 */
│   │   │       └── button.stories.tsx /* Storybook stories for components */
│   │   ├── package.json
│   │   └── tailwind.config.ts /* 디자인 시스템에 사용될 토큰 등록 */
│   └── eslint/ /* @ject-5-fe/eslint - ESLint 설정 공유 패키지, 프로젝트 전반의 코드 품질 및 스타일 가이드 통일 */
│       ├── base.js /* Base ESLint config */
│       ├── next.js /* Next.js specific ESLint config */
│       └── package.json
├── package.json /* Workspace root package.json */
├── yarn.lock /* PnP Mode 의존성 관리그렇게 파, .yarn/cache에 압축된 형태로 저장 */
├── commitlint.config.js /* Conventional Commits 규칙 */
└── lint-staged.config.js /* husky + lint-staged를 활용한 pre-commit 파일 체크 */
```

## 📂 디렉토리 역할

### service/ 디렉토리 
📁 **위치**: 프로젝트 루트의 `service/`
- **목적**: 실제 서비스 애플리케이션들이 위치하는 디렉토리
- **내용**: 최종 사용자에게 제공되는 실제 서비스들

### shared/ 디렉토리
📁 **위치**: 프로젝트 루트의 `shared/`
- **목적**: 패키지 내에서 공유될 공통 패키지들이 위치하는 디렉토리
- **내용**: 여러 서비스에서 공통으로 사용되는 라이브러리, 컴포넌트, 유틸리티 등

